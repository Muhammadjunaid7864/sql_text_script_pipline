# This is a basic workflow to help you get started with Actions

name: Sql Script
run-name: Sql Script paractice by ${{github.actor}}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "create file"
        run: |
          echo "BEGIN TRAN
          WAITFOR DELAY '00:00:10'
          UPDATE Students SET FirstName = 'Nasir' WHERE StudentID = 1;
          UPDATE teacher SET FirstName = 'Nasir' WHERE teacherID = 1;
          GO">deadloack.sql
      - name: "read file"
        run: |
          cat deadloack.sql
      
      - name: "check deadlock"
        run: |
          sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -b -j -Q "SELECT * FROM sys.dm_tran_locks WHERE resource_type = 'OBJECT'"          
      - name: "Script run"
        run: |
          sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -b -j -i deadloack.sql
    
  build1: 
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "create file"
        run: |
          echo "BEGIN TRAN;
          UPDATE teacher SET FirstName = 'Nasir' WHERE teacherID = 1;
          WAITFOR DELAY '00:00:20'
          UPDATE Students SET FirstName = 'Nasir' WHERE StudentID = 1;
          GO">deadloack1.sql
      - name: "read file"
        run: |
          cat deadloack1.sql
      
      - name: "Script run"
        run: |
          sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -b -j -i deadloack1.sql
      - name: "check deadlock"
        run: |

          sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -b -j -Q "SELECT * FROM sys.dm_tran_locks WHERE resource_type = 'OBJECT'"
  checkupdate:
    runs-on: ubuntu-latest

    steps:
      - name: Check SQL Update Query
        run: |
          endTime=$((SECONDS+300))  # Calculate the end time 5 minutes from now
          while [ $SECONDS -lt $endTime ]; do
            updateCount=$((sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -Q "SELECT COUNT(*) FROM sys.dm_exec_requests WHERE command = 'UPDATE'" | awk '{if(NR>2) print $0}'))
            if [ "$updateCount" -lt 1 ]; then
              sqlcmd -S database-1.cqsvhj4w2dhq.us-west-2.rds.amazonaws.com,1433 -U admin -P developer7864 -d Mydb -b -j -i deadloack.sql
            fi
            sleep 1
          done